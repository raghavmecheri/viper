# Original Code: https://stackoverflow.com/questions/22897209/dijkstras-algorithm-in-python

char nodes[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];
[char: [char:int]] distances = [
    'B': ['A': 5, 'D': 1, 'G': 2],
    'A': ['B': 5, 'D': 3, 'E': 12, 'F' :5],
    'D': ['B': 1, 'G': 1, 'E': 1, 'A': 3],
    'G': ['B': 2, 'D': 1, 'C': 2],
    'C': ['G': 2, 'E': 1, 'F': 16],
    'E': ['A': 12, 'D': 1, 'C': 1, 'F': 2],
    'F': ['A': 5, 'E': 2, 'C': 16]];

[char: int] unvisited = [];
[char: int] visited = [];

for(char node in nodes) {
    unvisited[node] = -1;
}

char current = 'B';
int currentDistance = 0;
unvisited[current] = currentDistance;

while(True) {
    for ((char, int) x in distances[current].items()) {
        if(!(unvisited has x[0])) {
            skip;
        }
        int newDist = currentDistance + x[1];
        if(unvisited[x[0]] == -1 || unvisited[x[0]] > newDist) {
            unvisited[x[0]] = newDist
        } 
    }
    visited[current] = currentDist;
    unvisited.remove(current);
    if(len(unvisited) == 0) {
        abort;
    }
    char tempCurrent = '';
    char tempDist = -1;
    for((char, int) x in unvisited.items()) {
        tempCurrent, tempDist = ??
            x[1] > tempDist : x
          | (tempCurrent, tempDist)
          ??;
    }
    current = tempCurrent;
    currentDistance = tempDist;
}

print(visited.toString())
